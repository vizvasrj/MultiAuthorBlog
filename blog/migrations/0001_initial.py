# Generated by Django 4.0.4 on 2022-04-19 22:29

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import taggit_autosuggest.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mytag', '__first__'),
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('publication', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=['title', 'created'])),
                ('subtitle', models.CharField(blank=True, max_length=200, null=True, verbose_name='subtitle')),
                ('cover', models.ImageField(blank=True, default='category/defaultcatg.jpg', null=True, upload_to='category/', verbose_name='cover')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='cover/%Y/%m/%d', verbose_name='cover')),
                ('creator_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='photographer name')),
                ('creator_url', models.CharField(blank=True, max_length=100, null=True, verbose_name='photographer profile url')),
                ('sha_256', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='sha_256')),
            ],
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='title')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='cover/%Y/%m/%d', verbose_name='cover')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, max_length=256, populate_from='title')),
                ('audio', models.FileField(blank=True, null=True, upload_to='')),
                ('body', models.TextField()),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('trashed', 'Trashed')], default='published', max_length=10)),
                ('total_likes', models.PositiveIntegerField(db_index=True, default=0)),
                ('scrape_url', models.CharField(blank=True, max_length=256, null=True)),
                ('t', models.CharField(blank=True, default='None', max_length=20, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='blog_posts', to='account.profile', verbose_name='author')),
                ('bookmark_list', models.ManyToManyField(blank=True, related_name='post_bookmark', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='blog.category', verbose_name='category')),
                ('cover2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='im_posts', to='blog.image', verbose_name='cover image')),
                ('last_editeduser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='last_edited', to=settings.AUTH_USER_MODEL)),
                ('other_author', models.ManyToManyField(blank=True, related_name='other_authors', to=settings.AUTH_USER_MODEL, verbose_name='other authors')),
                ('publication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='posts', to='publication.publication', verbose_name='publication')),
            ],
            options={
                'ordering': ('-publish',),
                'get_latest_by': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Sources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=256, null=True)),
                ('url', models.CharField(blank=True, max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagPostOccurrenceLen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_occurence', to='blog.post')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_occurrence', to='mytag.mycustomtag')),
                ('tag_count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nums', to='blog.occurrence')),
            ],
        ),
        migrations.CreateModel(
            name='SharedOrOtherEdit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('edit_summary', models.CharField(max_length=500)),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share_editor', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='others_edited_posts', to='blog.post')),
                ('tags', taggit_autosuggest.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='source',
            field=models.ManyToManyField(blank=True, related_name='postsource', to='blog.sources'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=taggit_autosuggest.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='mytag.TaggedWhatever', to='mytag.MyCustomTag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='post',
            name='users_like',
            field=models.ManyToManyField(blank=True, related_name='posts_liked', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('total_likes', models.PositiveIntegerField(db_index=True, default=0)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('commentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to='account.profile')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='blog.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post')),
                ('users_like', models.ManyToManyField(blank=True, related_name='comments_liked', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
